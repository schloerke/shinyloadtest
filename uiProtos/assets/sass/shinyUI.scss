// Order of this stuff is important for UIkit so the following sections MUST be respected
// Import of UIkit variables and mixins
// @import "../uikit/src/scss/variables.scss";
@import "../uikit/src/scss/mixins.scss";
// @import "../uikit/src/scss/uikit.scss";

// Custom variables and variable overrides
$rStudioblue: rgba(117, 170, 219, 1);
$darkblue: rgba(24, 46, 63, 1);
$mutedlightblue: rgba(229, 239, 248, 1);
$white: rgba(255, 255, 255, 1);
$mutedblue: rgba(154, 193, 228, 1);

$global-color: $rStudioblue; 
$global-muted-background: $rStudioblue;
$global-primary-background: $darkblue;

$form-range-thumb-height: 1.2rem;
$track-w: 20rem;
$track-h: .25rem;
$thumb-d: $form-range-thumb-height;
$track-c: #ccc;
$filll-c: #95a;
$dist: $track-w - $thumb-d;

// Custom or mixin overrides
  @mixin track($fill: 0) {
    box-sizing: border-box;
    border: none;
    width: $track-w; height: $track-h;
    background: $track-c;
    
    @if $fill == 1 {
      .sui-range-slider-container & {
        background: linear-gradient($filll-c, $filll-c)
          0/ var(--sx) 100% no-repeat $track-c
      }
    }
  }

  @mixin fill() {
    height: $track-h;
    background: $filll-c
  }

// a set of styles to set up basic page layouts
.sui-layout{
  // sane fluid layout
  &-fullscreen-max-centered {
    max-width: 1800px;
    margin-left: auto;
    margin-right: auto;
  }
  // unconstrained fluid layout
  &-fullscreen-no-max {
    max-width: none;
    margin: 0;
  }
  
  //flexbox based horizontal grid
  &-flex-horz {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: flex-start;
    width: 100%;
  }
  //flexbox based vertical grid
  &-flex-vert-fullscreen {
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    justify-content: flex-start;
    height:100%;
    min-height:calc(100vh);
  }
  &-flex-vert {
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    justify-content: flex-start;
  }
}

// a set of styles to actually use flex box the way it was designed to be used
.sui-flex {
  &-0 {
    flex: 0;
  }
  &-1 {
    flex: 1;
  }
  &-2 {
    flex: 2;
  }
  &-3 {
    flex: 3;
  }
  &-4 {
    flex: 4;
  }
  &-5 {
    flex: 5;
  }
  &-6 {
    flex: 6;
  }
  &-7 {
    flex: 7;
  }
  &-centered {
    justify-content: center;
  }
  &-middled {
    align-items: middle;
  }
}


// styles to make a cross-browser functional range input that relies on almost no JS
/// override to UIKit's background setting in chrome that was causing problems
  .uk-range:focus::-webkit-slider-runnable-track, 
  .uk-range:active::-webkit-slider-runnable-track{
    @include track(1)
  }
.sui-range {
  
  &-label {
    display: block;
    margin-bottom: 2rem;
  }
  .uk-range::-webkit-slider-thumb{
    margin-top: -0.5rem;
  }  

  &-input{
    &, &::-webkit-slider-thumb {
		  -webkit-appearance: none;
	  }
    --range: calc(var(--max) - var(--min));
    --ratio: calc((var(--val) - var(--min))/var(--range));
    --sx: calc(.5 * #{$thumb-d} + var(--ratio) * (100% - #{$thumb-d}));
    width: $track-w;
    height: $thumb-d;
    background:transparent;
    position: relative;
    z-index: 10;
    top: 10px;
    &::-webkit-slider-runnable-track { @include track(1) }
    &::-moz-range-track { @include track }
    &::-ms-track { @include track }
    &::-moz-range-progress { @include fill }
    &::-ms-fill-lower { @include fill }
    &::-ms-tooltip { display: none }
  }
  output {
    position: relative;
    display: inline-block;
    background-color: $background-primary-background;
    height: 20px;
    text-align: center;
    color: white;
    border-radius: 3px;
    padding: 0.125rem 0.25rem;
    font-size: 13px;
    top: 15px;
    left: .5 * $thumb-d;
    transform: translate(calc((var(--val) - var(--min)) / (var(--max) - var(--min)) * #{$dist} - 50%));
  }

  &-slider-container{
    margin-bottom: 1rem;
    height: 5rem;
  }
  
  &-marks{
    list-style: none;
    display: inline-flex;
    justify-content: space-around;
    align-items: baseline;
    width: 100%;
    margin: 0;
    padding: 0;
    position: relative;
    z-index: 5;

    li {
      flex: 1;
      font-size: 0.7rem;
      padding: 0 2px;

      &:first-of-type{
        padding-left: 0;
        text-align: left;
        align-self: flex-start;
      }
      &:last-of-type{
        padding-right: 0;
        text-align: right;
        align-self: flex-end;
      }
    }
  }
}

// noUI slider's base styles the define the slider itself
.noUi-target,
.noUi-target * {
  -webkit-touch-callout: none;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -webkit-user-select: none;
  -ms-touch-action: none;
  touch-action: none;
  -ms-user-select: none;
  -moz-user-select: none;
  user-select: none;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}
.noUi-target {
  position: relative;
  direction: ltr;
}
.noUi-base,
.noUi-connects {
  width: 100%;
  height: 100%;
  position: relative;
  z-index: 1;
}
/* Wrapper for all connect elements.
 */
.noUi-connects {
  overflow: hidden;
  z-index: 0;
}
.noUi-connect,
.noUi-origin {
  will-change: transform;
  position: absolute;
  z-index: 1;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  -ms-transform-origin: 0 0;
  -webkit-transform-origin: 0 0;
  transform-origin: 0 0;
}
/* Offset direction
 */
html:not([dir="rtl"]) .noUi-horizontal .noUi-origin {
  left: auto;
  right: 0;
}
/* Give origins 0 height/width so they don't interfere with clicking the
 * connect elements.
 */
.noUi-vertical .noUi-origin {
  width: 0;
}
.noUi-horizontal .noUi-origin {
  height: 0;
}
.noUi-handle {
  position: absolute;
}
.noUi-state-tap .noUi-connect,
.noUi-state-tap .noUi-origin {
  -webkit-transition: transform 0.3s;
  transition: transform 0.3s;
}
.noUi-state-drag * {
  cursor: inherit !important;
}
/* Slider size and handle placement;
 */
.noUi-horizontal {
  height: 18px;

  .noUi-handle {
    width: 15px;
    height: 15px;
    left: -15px; // good candidate for a var
    top: -6px;
  }
}
html:not([dir="rtl"]) .noUi-horizontal .noUi-handle {
  right: -8px; // good candidate for a var
  left: auto;
}

.noUi-vertical {
  width: 18px;
  
  .noUi-handle {
    width: 28px;
    height: 34px;
    left: -6px;
    top: -17px;
  }
}

$sui-slider-track-height: 4px;
$sui-slider-cursor: grab;
/* Styling;
 * Giving the connect element a border radius causes issues with using transform: scale
 */
.noUi-target {
  background: transparent;
  border-radius: 4px;
  border: 1px solid #D3D3D3;
  height: $sui-slider-track-height;
  margin-bottom: 35px;

  .noUi-connects {
    border-radius: 3px;

    .noUi-connect {
      background: $background-primary-background;
    }
  }

  /* Handles and cursors */
  .noUi-draggable {
    cursor: $sui-slider-cursor;
  }
  .noUi-vertical .noUi-draggable {
    cursor: $sui-slider-cursor;
  }
  .noUi-handle {
    border: 1px solid #D9D9D9;
    border-radius: 50px;
    background: #FFF;
    cursor: default;
  }
  .noUi-active {
    box-shadow: inset 0 0 1px #FFF, inset 0 1px 7px #DDD, 0 3px 6px -3px #BBB;
  }

  .noUi-pips,
  .noUi-pips * {
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }
  .noUi-pips {
    position: absolute;
    color: #999;

    &-horizontal {
      padding: 1px 0;
      top: 100%;
      left: 0;
      width: 100%;
    }
    &-vertical {
      padding: 0 1px;
      height: 100%;
      top: 0;
      left: 100%;
    }

    .noUi-marker {
      position: absolute;
      background: #CCC;

      &-sub {
        background: #AAA;
      }
      &-large {
        background: #AAA;
      }
      &-horizontal.noUi-marker {
        margin-left: -1px;
        width: 2px;
        height: 4px;
      }
      &-horizontal.noUi-marker-sub {
        height: 10px;
      }
      &-horizontal.noUi-marker-large {
        height: 7px;
      }
      &-vertical.noUi-marker {
        width: 4px;
        height: 2px;
        margin-top: -1px;
      }
      &-vertical.noUi-marker-sub {
        width: 10px;
      }
      &-vertical.noUi-marker-large {
        width: 7px;
      }
    }

    .noUi-value {
      position: absolute;
      white-space: nowrap;
      text-align: center;

      &-sub {
        color: #ccc;
        font-size: 10px;
      }
      &-large {
        font-size: 12px;
      }
      &-horizontal {
        -webkit-transform: translate(-50%, 50%);
        transform: translate(-50%, 50%);
      }
      &-vertical {
        -webkit-transform: translate(0, -50%);
        transform: translate(0, -50%, 0);
        padding-left: 25px;
      }

    }
    
  }
}

.noUi-rtl .noUi-pips {
  .noUi-value-horizontal {
    -webkit-transform: translate(50%, 50%);
    transform: translate(50%, 50%);
  }
  .noUi-value-vertical {
    -webkit-transform: translate(0, 50%);
    transform: translate(0, 50%);
  }
}

.noUi-tooltip {
  display: block;
  position: absolute;
  border-radius: 3px;
  background: $background-primary-background;
  color: #fff;
  font-size: 12px;
  padding: 1px 4px;
  text-align: center;
  white-space: nowrap;
}
.noUi-horizontal .noUi-tooltip {
  -webkit-transform: translate(-50%, 0);
  transform: translate(-50%, 0);
  left: 50%;
  bottom: 110%;
}
.noUi-vertical .noUi-tooltip {
  -webkit-transform: translate(0, -50%);
  transform: translate(0, -50%);
  top: 50%;
  right: 120%;
}

[disabled].noUi-target,
[disabled].noUi-handle,
[disabled] .noUi-handle {
  cursor: not-allowed;
}

.sui-select {
  margin-bottom: 1rem;
  &-label{
    display: block;
    margin-bottom: 0.5rem;
  }
  &-button {
    text-align: left;
  }
  .uk-dropdown {
    padding: 15px 0;
    max-height: 125px;
    overflow-y: scroll;
  }

  &-list {
    
    li {
      padding: 7px 25px;
      &:hover{
        background-color: $background-primary-background;
        color: #fff;
      }
    }
  }
  &-tags-list {
    list-style: none;
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-start;
    padding: 0;
    margin-top: 0.25rem;

    li {
      flex: 0 0 content;
      cursor: pointer;
      padding: 0 4px 0 0;

      &:last-of-type{
        padding: 0;
      }
    }


  }
}

.uk-label.sui-tag {
  text-transform: none;
  padding-right: 5px;
}

.sui-text-input {
  margin-bottom: 1rem;

  &-label {
    display: block;
    margin-bottom: 0.5rem;
  }
}

.sui-scatter-plot {
  width: 100%;
  height: 100%;
}

.sui-grid-container {
  display: grid;
  height: auto;
}

.sui-variable-axis {
  align-self: start;
  justify-self: center;
  margin: 0;
  padding: 0 8px;

  .uk-dropdown {
    padding: 5px 0;
  }

  a.sui-variable-axis-button {
    color: $text-muted-color;

    &:hover {
      text-decoration: none;
    }
    span {
      vertical-align: bottom;
    }
  }

  &--vert {
    // justify-self: end;
    align-self: center;
    margin: 0;

    a.sui-variable-axis-button {
      writing-mode: vertical-lr;
      height: max-content; // chrome doesn't treat this like an inline element without this
      padding: 8px 0;
      color: $text-muted-color;

    &:hover {
      text-decoration: none;
    }

      span {
        vertical-align: bottom;
      }
    }
    .uk-dropdown {
      padding: 5px 0;
    }
  }
}

.sui-background-map {
  position: absolute;
  z-index: 1;
  width: calc(100vw);
  height: calc(100vh);
}
.sui-floating-col--left,
.sui-floating-col--right {
  width: calc(20vw);
  min-width: 300px;
  max-width:400px;
  height: calc(100vh - 60px);
  top: 20px;
  position: absolute;
  display: flex;
  flex-direction: column;
  background-color: $global-muted-background;
  z-index: 100;
  padding: 10px;
}
.sui-floating-col--left{
  left: 15px;
}
.sui-floating-col--right{
  right: 15px;
}

.sui-nav-sidebar {
  .uk-active {
    animation: activeSlideIn 500ms ease-in-out 0s 1;
    background: linear-gradient(#fff, #fff);
    background-position: 3000px 0px;
    background-size: 100% 100%;

    
    a {
      color: $text-primary-color;
    }
  }
  li {
    padding: 0.5rem 1.5rem;

    a {
      color: $text-lead-color;
    }
  }
}

.sui-segmented-button {
  // this crazy level of specificity is needed to override the UIKit styles for this instance
  & .sui-segmented-button-button {
    background-color: transparent;
    border: 1px solid $button-primary-background;
    color: $button-primary-background;
  }

  & .sui-segmented-button-selected {
    background: $button-primary-background;
    border: none;
    color: $button-primary-color;

    &:hover{
      background: $button-primary-background;
    }
  }
}

.sui-background-dark {
  // background-color: #bfbfbf;
}
// styles sepeific to the map prototype, all NS'd map-
.map-grid {
  grid-template-columns: 1fr auto;
  
}

// styles specific to this prototype, all NS'd movie-
.movie-grid {
  grid-template-columns: 30px 1fr;
  grid-template-rows: 1fr 30px;
  
}
.movie-plot {
  grid-column: 2 / 3;
  grid-row: 1 / 2;
}
.movie-axis-x {
  grid-column: 2 / 3;
  grid-row: 2 / 3;
}
.movie-axis-y {
  grid-column: 1 / 2;
  grid-row: 1 / 2;
}

.main {
  h1 {
    margin: 0 0 0.25rem;
    flex-basis: auto;
  }
  h4 {
    margin: 0 0 2rem;
    flex-basis: auto;
  }
  
}


// fixing an issue with the built in grid component where it was autmatically always applying a 
// -30px margin and a media query with a -40px margin for viewports >= 1200px
.uk-grid {
  margin: 0;

  @media screen and (min-width: 1200px){
    margin: 0 !important;
  }

  .uk-first-column {
    padding-left:0;
  }
}

// the default UIkit theme
@import "../uikit/src/scss/uikit.scss";