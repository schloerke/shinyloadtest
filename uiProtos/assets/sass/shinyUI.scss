// Order of this stuff is important for UIkit so the following sections MUST be respected

@import url('https://fonts.googleapis.com/css?family=Inconsolata');
// Custom variables and variable overrides
$rStudioblue: rgba(117, 170, 219, 1);
$darkblue: rgba(24, 46, 63, 1);
$mutedlightblue: rgba(229, 239, 248, 1);
$white: rgba(255, 255, 255, 1);
$mutedblue: rgba(154, 193, 228, 1);

//Data colors
$data-color-01: #7fc97f;
$data-color-02: #beaed4;
$data-color-03: #fdc086;
$data-color-04: #f28983;
$data-color-05: #7ddbb6;
$data-color-06: #75aadb;
$data-color-07: #5d945d;
$data-color-08: #9084a1;
$data-color-09: #c9996b;
$data-color-10: #bd5c57;
$data-color-11: #5fa68a;
$data-color-12: #5981a6;
$data-color-13: #9efa9e;
$data-color-14: #e5d1ff;
$data-color-15: #8df5cc;
$data-color-16: #88c6ff;
$data-color-17: #3d613d;
$data-color-18: #625a6e;
$data-color-19: #967250;
$data-color-20: #8a433f;
$data-color-21: #467362;
$data-color-22: #3d5973;

// Accent colors only to be used as accents
// e.g. I'm currently using these colors for the lines and dots in the box plots

// $accent-1 is the accent color for use with data colors: 01, 07, 13, 17
$accent-1: #144714;

// $accent-2 is the accent color for use with data colors: 02, 08, 14, 18
$accent-2: #413554;

// $accent-3 is the accent color for use with data colors: 03, 09, 19
$accent-3: #7a4920;

// $accent-4 is the accent color for use with data colors: 04, 10, 20
$accent-4: #5c1815;

// $accent-5 is the accent color for use with data colors: 05, 11, 15, 21
$accent-5: #14593e;

// $accent-6 is the accent color for use with data colors: 06, 12, 16, 22
$accent-6: #103659;

$global-color: $darkblue; 
$global-emphasis-color: $rStudioblue;
$global-link-color: $rStudioblue;
$global-link-hover-color: $mutedlightblue;

$global-muted-color: lighten($darkblue, 15%);
$global-muted-background: lighten($mutedlightblue, 4%);
$global-primary-background: $darkblue;

$button-primary-background: $rStudioblue;

$grid-card-shadow-color: lighten($darkblue, 75%);
$logo-face: 'Inconsolata', monospace;
$logo-color: lighten($darkblue, 10%);
$side-menu-border-color: transparentize($global-emphasis-color, 0.7);
$side-menu-border: 1px solid $side-menu-border-color;
$side-menu-item-color: lighten($global-color, 28%);

$form-range-thumb-height: 1.2rem;
$track-w: 20rem;
$track-h: .25rem;
$thumb-d: $form-range-thumb-height;
$track-c: #ccc;
$filll-c: #95a;
$dist: $track-w - $thumb-d;

// Import of UIkit variables and mixins
@import "../uikit/src/scss/variables.scss";
@import "../uikit/src/scss/mixins.scss";

// Custom or mixin overrides
 * {
   box-sizing: border-box;
 }
// a set of styles to set up basic page layouts
.sui-layout{
  // sane fluid layout
  &-fullscreen-max-centered {
    max-width: 1800px;
    margin-left: auto;
    margin-right: auto;
  }
  // unconstrained fluid layout
  &-fullscreen-no-max {
    max-width: none;
    margin: 0;
  }
  
  //flexbox based horizontal grid
  &-flex-horz {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: flex-start;
    width: 100%;
  }
  //flexbox based vertical grid
  &-flex-vert-fullscreen {
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    justify-content: flex-start;
    height:100%;
    min-height:calc(100vh);
  }
  &-flex-vert {
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    justify-content: flex-start;
  }
}

// a set of styles to actually use flex box the way it was designed to be used
.sui-flex {
  &-0 {
    flex: 0;
  }
  &-1 {
    flex: 1;
  }
  &-2 {
    flex: 2;
  }
  &-3 {
    flex: 3;
  }
  &-4 {
    flex: 4;
  }
  &-5 {
    flex: 5;
  }
  &-6 {
    flex: 6;
  }
  &-7 {
    flex: 7;
  }
  &-centered {
    justify-content: center;
  }
  &-middled {
    align-items: middle;
  }
}


// noUI slider's base styles the define the slider itself
.noUi-target,
.noUi-target * {
  -webkit-touch-callout: none;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -webkit-user-select: none;
  -ms-touch-action: none;
  touch-action: none;
  -ms-user-select: none;
  -moz-user-select: none;
  user-select: none;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}
.noUi-target {
  position: relative;
  direction: ltr;
}
.noUi-base,
.noUi-connects {
  width: 100%;
  height: 100%;
  position: relative;
  z-index: 1;
}
/* Wrapper for all connect elements.
 */
.noUi-connects {
  overflow: hidden;
  z-index: 0;
}
.noUi-connect,
.noUi-origin {
  will-change: transform;
  position: absolute;
  z-index: 1;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  -ms-transform-origin: 0 0;
  -webkit-transform-origin: 0 0;
  transform-origin: 0 0;
}
/* Offset direction
 */
html:not([dir="rtl"]) .noUi-horizontal .noUi-origin {
  left: auto;
  right: 0;
}
/* Give origins 0 height/width so they don't interfere with clicking the
 * connect elements.
 */
.noUi-vertical .noUi-origin {
  width: 0;
}
.noUi-horizontal .noUi-origin {
  height: 0;
}
.noUi-handle {
  position: absolute;
}
.noUi-state-tap .noUi-connect,
.noUi-state-tap .noUi-origin {
  -webkit-transition: transform 0.3s;
  transition: transform 0.3s;
}
.noUi-state-drag * {
  cursor: inherit !important;
}
/* Slider size and handle placement;
 */
.noUi-horizontal {
  height: 18px;

  .noUi-handle {
    width: 15px;
    height: 15px;
    left: -15px; // good candidate for a var
    top: -6px;
  }
}
html:not([dir="rtl"]) .noUi-horizontal .noUi-handle {
  right: -8px; // good candidate for a var
  left: auto;
}

.noUi-vertical {
  width: 18px;
  
  .noUi-handle {
    width: 28px;
    height: 34px;
    left: -6px;
    top: -17px;
  }
}

$sui-slider-track-height: 4px;
$sui-slider-cursor: grab;
/* Styling;
 * Giving the connect element a border radius causes issues with using transform: scale
 */
.noUi-target {
  background: transparent;
  border-radius: 4px;
  border: 1px solid #D3D3D3;
  height: $sui-slider-track-height;
  margin-bottom: 35px;

  .noUi-connects {
    border-radius: 3px;

    .noUi-connect {
      background: $background-primary-background;
    }
  }

  /* Handles and cursors */
  .noUi-draggable {
    cursor: $sui-slider-cursor;
  }
  .noUi-vertical .noUi-draggable {
    cursor: $sui-slider-cursor;
  }
  .noUi-handle {
    border: 1px solid #D9D9D9;
    border-radius: 50px;
    background: #FFF;
    cursor: default;
  }
  .noUi-active {
    box-shadow: inset 0 0 1px #FFF, inset 0 1px 7px #DDD, 0 3px 6px -3px #BBB;
  }

  .noUi-pips,
  .noUi-pips * {
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }
  .noUi-pips {
    position: absolute;
    color: #999;

    &-horizontal {
      padding: 1px 0;
      top: 100%;
      left: 0;
      width: 100%;
    }
    &-vertical {
      padding: 0 1px;
      height: 100%;
      top: 0;
      left: 100%;
    }

    .noUi-marker {
      position: absolute;
      background: #CCC;

      &-sub {
        background: #AAA;
      }
      &-large {
        background: #AAA;
      }
      &-horizontal.noUi-marker {
        margin-left: -1px;
        width: 2px;
        height: 4px;
      }
      &-horizontal.noUi-marker-sub {
        height: 10px;
      }
      &-horizontal.noUi-marker-large {
        height: 7px;
      }
      &-vertical.noUi-marker {
        width: 4px;
        height: 2px;
        margin-top: -1px;
      }
      &-vertical.noUi-marker-sub {
        width: 10px;
      }
      &-vertical.noUi-marker-large {
        width: 7px;
      }
    }

    .noUi-value {
      position: absolute;
      white-space: nowrap;
      text-align: center;

      &-sub {
        color: #ccc;
        font-size: 10px;
      }
      &-large {
        font-size: 12px;
      }
      &-horizontal {
        -webkit-transform: translate(-50%, 50%);
        transform: translate(-50%, 50%);
      }
      &-vertical {
        -webkit-transform: translate(0, -50%);
        transform: translate(0, -50%, 0);
        padding-left: 25px;
      }

    }
    
  }
}

.noUi-rtl .noUi-pips {
  .noUi-value-horizontal {
    -webkit-transform: translate(50%, 50%);
    transform: translate(50%, 50%);
  }
  .noUi-value-vertical {
    -webkit-transform: translate(0, 50%);
    transform: translate(0, 50%);
  }
}

.noUi-tooltip {
  display: block;
  position: absolute;
  border-radius: 3px;
  background: $background-primary-background;
  color: #fff;
  font-size: 12px;
  padding: 1px 4px;
  text-align: center;
  white-space: nowrap;
}
.noUi-horizontal .noUi-tooltip {
  -webkit-transform: translate(-50%, 0);
  transform: translate(-50%, 0);
  left: 50%;
  bottom: 110%;
}
.noUi-vertical .noUi-tooltip {
  -webkit-transform: translate(0, -50%);
  transform: translate(0, -50%);
  top: 50%;
  right: 120%;
}

[disabled].noUi-target,
[disabled].noUi-handle,
[disabled] .noUi-handle {
  cursor: not-allowed;
}

.sui-select {
  margin-bottom: 1rem;
  &-label{
    display: block;
    margin-bottom: 0.5rem;
  }
  &-button {
    text-align: left;
  }
  .uk-dropdown {
    padding: 15px 0;
    max-height: 125px;
    overflow-y: scroll;
  }

  &-list {
    
    li {
      padding: 7px 25px;
      &:hover{
        background-color: $background-primary-background;
        color: #fff;
      }
    }
  }
  &-tags-list {
    list-style: none;
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-start;
    padding: 0;
    margin-top: 0.25rem;

    li {
      flex: 0 0 content;
      cursor: pointer;
      padding: 0 4px 0 0;

      &:last-of-type{
        padding: 0;
      }
    }


  }
}

.uk-label.sui-tag {
  text-transform: none;
  padding-right: 5px;
}

.sui-text-input {
  margin-bottom: 1rem;

  &-label {
    display: block;
    margin-bottom: 0.5rem;
  }
}

.sui-scatter-plot {
  width: 100%;
  height: 100%;
}

.sui-grid-container {
  display: grid;
  height: auto;
}

.sui-variable-axis {
  align-self: start;
  justify-self: center;
  margin: 0;
  padding: 0 8px;

  .uk-dropdown {
    padding: 5px 0;
  }

  a.sui-variable-axis-button {
    color: $text-muted-color;

    &:hover {
      text-decoration: none;
    }
    span {
      vertical-align: bottom;
    }
  }

  &--vert {
    // justify-self: end;
    align-self: center;
    margin: 0;

    a.sui-variable-axis-button {
      writing-mode: vertical-lr;
      height: max-content; // chrome doesn't treat this like an inline element without this
      padding: 8px 0;
      color: $text-muted-color;

    &:hover {
      text-decoration: none;
    }

      span {
        vertical-align: bottom;
      }
    }
    .uk-dropdown {
      padding: 5px 0;
    }
  }
}

.sui-background-map {
  position: absolute;
  z-index: 1;
  width: calc(100vw);
  height: calc(100vh);
}
.sui-floating-col--left,
.sui-floating-col--right {
  width: calc(20vw);
  min-width: 300px;
  max-width:400px;
  height: calc(100vh - 60px);
  top: 20px;
  position: absolute;
  display: flex;
  flex-direction: column;
  background-color: $global-muted-background;
  z-index: 100;
  padding: 10px;
}
.sui-floating-col--left{
  left: 15px;
}
.sui-floating-col--right{
  right: 15px;
}

.sui-nav-sidebar {
  .uk-active {
    background-color:$white;
    box-shadow: 1px 0 $white;
    border-top: $side-menu-border;
    border-bottom: $side-menu-border;

    
    a {
      color: $logo-color;
    }
  }
  li {
    padding: 0.5rem 1rem 0.5rem 3rem;

    a {
      color: $side-menu-item-color;
    }
  }

  h1 {
    font-family: $logo-face;
    font-size: 1.5rem; 
    font-weight: bold;
    color: $logo-color;
    padding: 0.5rem 0;
    margin:0;

  }
}

.sui-segmented-button {
  // this crazy level of specificity is needed to override the UIKit styles for this instance
  & .sui-segmented-button-button {
    background-color: transparent;
    border: 1px solid $button-primary-background;
    color: $button-primary-background;
  }

  & .sui-segmented-button-selected {
    background: $button-primary-background;
    border: none;
    color: $button-primary-color;

    &:hover{
      background: $button-primary-background;
    }
  }
}

.sui-full-height {
  height: calc(100vh);
}

//SLT specific styles
.slt-side-menu-container{
  // border-right: $side-menu-border;
  box-shadow: inset 0px 0px 5px $side-menu-border-color;
  padding-top: 1.5rem;
}
#data-table,
#duration,
#sixteen-worker-chart {
  display: none;
}

.sui-nav-sidebar h1 {
  font-size: 1.9rem;
}
// more absurd specificity to beat out the UIkit styles
#chart-grid-page .slt-chart-grid {
  padding: 0 2rem 2rem; 

  &-chart {
    box-shadow: 0 0 10px $grid-card-shadow-color;
    background-color: $white;
  }
}
.slt-data-table {
  // this is an absurd level of specificity, but it's what was required to override the UIkit styles
  tr > th {
    position:sticky; 
    top: 106px; 
    background-color: $button-primary-background;
    font-weight: bold;
    color: $white;
    font-size: 1.1rem;
  }

  tr > td, 
  tr > th {
    text-align:center;
  }

  tr > td:first-of-type,
  tr > th:first-of-type {
    text-align:left;
    padding-left: 1.5rem;
  }
}

.slt-view-control {
  position:sticky; 
  top:0px; 
  background-color:#fff; 
  padding: 2rem; 
  z-index:100;
  text-align: center;
}

.slt-side-menu-item {
  padding: 0.5rem 0;
 
  .stl-side-menu-icon {
    display: inline-block;
    padding: 0 0.5rem 0 0;
  }
} 


.slt-main-content {
  max-height: calc(100vh); 
  overflow-y:scroll;
}

.slt-box-picker-container {
  display: flex; 
  width: 100%; 
  padding: 0 2rem 2rem; 
  align-items:flex-end; 
  position:sticky; 
  top:106px; 
  z-index:100; 
  background-color:#fff;

  h3 {
    flex: 4;
    margin: 0;
  }

  #box-plot-picker {
    text-align:right; 
    margin-right:0.5rem; 
    font-size:1.5rem; 
    line-height:1.4;
    flex:1;
    max-width:70px;
    border:none;
    color: $global-emphasis-color;
    border-bottom:1px solid $global-emphasis-color;
  }
}




// fixing an issue with the built in grid component where it was automatically always applying a 
// -30px margin and a media query with a -40px margin for viewports >= 1200px
.uk-grid {
  margin: 0;

  @media screen and (min-width: 1200px){
    margin: 0 !important;
  }

  .uk-first-column {
    padding-left:0;
  }
}

// the default UIkit theme
@import "../uikit/src/scss/uikit.scss";